@model tpkp3k5.Models.Bet

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            @Html.Label("Event", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var eventTitle = Model?.e?.TeamOne + " - " + Model?.e?.TeamTwo + " on " + Model?.e?.Date.ToString();
                    @Html.DisplayFor(model => model.e.ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.DisplayFor(model => eventTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EventID, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Outcome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.Outcome, "", new { @class = "text-danger" })
                @Html.DropDownListFor(model => model.Outcome, new SelectList(
                  new List<Object>{
                       new { value = $"{Model?.e?.TeamOne}" , text = $"{Model?.e?.TeamOne}" },
                       new { value = "Draw", text = "Draw" },
                       new { value = $"{Model?.e?.TeamTwo}" , text = $"{Model?.e?.TeamTwo}" }
                    },
                  "value",
                  "text",
                   Model?.Outcome
           ))
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Event")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
